apiVersion: v1
kind: Namespace
metadata:
  name: ${{ values.component_id }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${{ values.component_id }}
  namespace: ${{ values.component_id }}
  labels:
    app: ${{ values.component_id }}
spec:
  selector:
    matchLabels:
      app: ${{ values.component_id }}
  replicas: 2
  template:
    metadata:
      labels:
        app: ${{ values.component_id }}
    spec:
      containers:
        - name: ${{ values.component_id }}
          image: ghcr.io/${{ values.destination.owner }}/${{ values.destination.repo }}:latest # {"$imagepolicy": "flux-system:${{ values.component_id }}"}
          imagePullPolicy: Always
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
---
apiVersion: v1
kind: Service
metadata:
  name: ${{ values.component_id }}
  namespace: ${{ values.component_id }}
  labels:
    app: ${{ values.component_id }}
spec:
  clusterIP: None
  selector:
    app: ${{ values.component_id }}
  ports:
    - name: http
      port: 3000
{%- if values.domain %}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${{ values.component_id }}
  namespace: ${{ values.component_id }}
  annotations:
    cert-manager.io/cluster-issuer: demo-issuer
    traefik.ingress.kubernetes.io/router.middlewares: traefik-https-redirect@kubernetescrd
spec:
  ingressClassName: external
  rules:
    - host: ${{ values.domain }}.demo.spotifyportal.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ${{ values.component_id }}
                port:
                  number: 3000
  tls:
    - secretName: ${{ values.component_id }}-demo-cert
      hosts:
        - ${{ values.domain }}.demo.spotifyportal.com
{%- endif %}
